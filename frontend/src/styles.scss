// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@use "./app/fragments/navbar/navbar.componant-theme" as navbar;
@use "./app/fragments/footer/footer.component-theme" as footer;
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$scss-primary: mat.define-palette(mat.$indigo-palette);
$scss-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$scss-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$scss-theme: mat.define-light-theme((color: (primary: $scss-primary, accent: $scss-accent, warn: $scss-warn, )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($scss-theme);

/* You can add global styles to this file, and also import other style files */
@include navbar.theme($scss-theme);
@include footer.theme($scss-theme);

html,
body,
app-root {
  display: block;
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

app-root {
  .d-flex {
    display: flex;
  }

  .align-items-center {
    align-items: center;
  }

  .justify-content-center {
    justify-content: center;
  }

  .flex-direction-column {
    flex-direction: column;
  }
}